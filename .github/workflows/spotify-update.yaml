name: Spotify Update
on:
  schedule:
    - cron: "*/2 * * * *"  # A cada 2 minutos
  workflow_dispatch:  # Permite execuÃ§Ã£o manual
  push:
    paths:
      - 'spotify_tracker.py'
      - 'spotify_update.py'

jobs:
  update-spotify:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Get Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          
      - name: Configure pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/cache/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
          
      - name: Install dependencies
        run: python -m pip install -r cache/requirements.txt
        
      - name: Update Spotify only
        run: python spotify_update.py
        
      - name: Update README with timestamp
        run: |-
          # Atualizar README com timestamp para quebrar cache
          TIMESTAMP=$(date +%s)
          sed -i "s|main/dark_mode\.svg.*\"|main/dark_mode.svg?t=$TIMESTAMP\"|g" README.md
          sed -i "s|main/light_mode\.svg.*\"|main/light_mode.svg?t=$TIMESTAMP\"|g" README.md
          
      - name: Commit Spotify changes
        run: |-
          git add *.svg README.md
          git diff --cached --quiet || (
            git config --global user.email "github-actions-bot@mxxnpy.github.io"
            git config --global user.name "mxxnpy/Spotify-Bot"
            git commit -m "ðŸŽµ Updated Spotify track"
            git push
          )
